library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cu_reg is
port(
	clk: in std_logic
);
end entity cu_reg;

architecture struct of cu_reg is

	component top_model is
    port( 
        -- INPUTS
		  z, clk  	: in std_logic;
        IR      	: in std_logic_vector(3 downto 0); -- INSTRUCTION REGISTER LOW NIBBLE
       
		  -- COMMAND SIGNALS
		  error, ARLOAD, ARINC, R, W, MEMBUS, BUSMEM, PCINC, PCLOAD, PCBUS, DRLBUS, DRHBUS, DRLOAD, TRLOAD, TRBUS, IRLOAD, RLOAD, RBUS, ACLOAD, ACBUS, ZLOAD	: out std_logic;
       
		  
		  --segment displayers
		  curr_add_H: out std_logic_vector(6 downto 0); -- HIGH NIBBLE OF CURRENT MICROCODE ADDRESS
		  curr_add_L: out std_logic_vector(6 downto 0); -- LOW NIBBLE OF CURRENT MICROCODE ADDRESS
		  curr_aLU_S: out std_logic_vector(6 downto 0)  -- ALUSELECT DISPLAY
    );
	end component;
	entity progcount is
	port(
		input : in STD_LOGIC_VECTOR (15 downto 0);
		clk : in STD_LOGIC;
		pcld : in  STD_LOGIC;
		pcinc : in STD_LOGIC;
		
		output : out STD_LOGIC_VECTOR (15 downto 0)
		);
	end component; 
	
	signal databus: std_logic_vector(15 downto 0);
	
	signal i_arload, i_pcload, i_arinc, i_pcinc

	

begin

	cu: top_model port map('1', clk, );
	pc: progcount port map(databus, clk, i_pcload, i_pcinc, databus);
	ar: progcount port map(databus, clk, i_arload, i_arinc, databus);



end architecture struct;